name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - v*
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:

  clean_release:
    runs-on: ubuntu-latest
    steps:
    - name: delete previous tag/release
      if: github.ref == 'refs/heads/main'
      uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        delete_release: true
        tag_name: "latest"
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-win:
    strategy:
      fail-fast: false
      matrix:
       toolchain: ["windows-static-x86", "windows-static-x64", "linux-x86"]
    runs-on: ubuntu-latest
    needs: [clean_release]
    container: dockcross/${{ matrix.toolchain }}:latest
    steps:

    - uses: actions/checkout@v2
    - run: |
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        git fetch --prune --unshallow

    - name: Compile project
      run: |
        DATEE=`date '+[%Y-%m-%d]'`
        mv LICENSE LICENSE.TXT
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make clean all
        7z a -t7z ${{ github.event.repository.name }}-${{ matrix.toolchain }}.7z ROMIMG* ../LICENSE.TXT ../README.md

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.toolchain }}
        path: |
             build/${{ github.event.repository.name }}*.7z

    - name: Deploy pre-release
      uses: softprops/action-gh-release@v1
      if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        fail_on_unmatched_files: true
        files: |
            build/${{ github.event.repository.name }}*.7z
        name: "Latest build"
        tag_name: "Latest"
        prerelease: true
